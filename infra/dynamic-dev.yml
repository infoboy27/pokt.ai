http:
  routers:
    # HTTP to HTTPS redirect
    poktai-web-redirect:
      rule: "Host(`localhost`) || Host(`pokt.ai`) || Host(`www.pokt.ai`)"
      service: poktai-web-redirect
      entryPoints:
        - web
      middlewares:
        - redirect-to-https

    # Main web application
    poktai-web:
      rule: "Host(`localhost`) || Host(`pokt.ai`) || Host(`www.pokt.ai`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 1
      middlewares:
        - security-headers

    # Admin API routes (served by web service)
    poktai-admin-api:
      rule: "(Host(`localhost`) || Host(`pokt.ai`) || Host(`www.pokt.ai`)) && PathPrefix(`/api/admin`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      middlewares:
        - security-headers
      priority: 15

    # Regular API routes (served by API service)
    poktai-api:
      rule: "(Host(`localhost`) || Host(`pokt.ai`) || Host(`www.pokt.ai`)) && PathPrefix(`/api`)"
      service: poktai-api
      entryPoints:
        - websecure
      tls: {}
      middlewares:
        - security-headers
        - rate-limit
      priority: 10

  middlewares:
    # Redirect HTTP to HTTPS
    redirect-to-https:
      redirectScheme:
        scheme: https
        permanent: true

    # Strip /api prefix for backend
    poktai-api-strip:
      stripPrefix:
        prefixes:
          - "/api"

    # Security headers
    security-headers:
      headers:
        frameDeny: true
        sslRedirect: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 31536000
        customRequestHeaders:
          X-Forwarded-Proto: "https"
        customResponseHeaders:
          X-Robots-Tag: "noindex,nofollow,nosnippet,noarchive"
          X-Content-Type-Options: "nosniff"
          X-Frame-Options: "DENY"
          X-XSS-Protection: "1; mode=block"

    # Rate limiting
    rate-limit:
      rateLimit:
        burst: 100
        average: 50

  services:
    # Redirect service (dummy)
    poktai-web-redirect:
      loadBalancer:
        servers:
          - url: "http://127.0.0.1:8080"

    # Web application service
    poktai-web:
      loadBalancer:
        servers:
          - url: "http://infra_web_1:4000"  # Web service container name
        healthCheck:
          path: "/"
          interval: "30s"
          timeout: "5s"

    # API service
    poktai-api:
      loadBalancer:
        servers:
          - url: "http://infra_api_1:3001"  # API service container name
        healthCheck:
          path: "/api/health"
          interval: "30s"
          timeout: "5s"
