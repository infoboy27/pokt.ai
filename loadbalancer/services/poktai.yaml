http:
  routers:
    poktai-auth-api:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api/auth`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 270

    poktai-gateway:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api/gateway`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 250

    poktai-rpc-proxy:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api/rpc/`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 200

    poktai-billing-api:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api/billing`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 160

    poktai-usage-api:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api/usage`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 165

    poktai-endpoints-detail:
      rule: "Host(`pokt.ai`) && PathRegexp(`^/api/endpoints/.+$`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 300

    poktai-endpoints-api:
      rule: "Host(`pokt.ai`) && Path(`/api/endpoints`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 150

    poktai-admin-api:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api/admin`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 100

    poktai-api:
      rule: "Host(`pokt.ai`) && PathPrefix(`/api`)"
      service: poktai-api
      entryPoints:
        - websecure
      tls: {}
      middlewares:
        - poktai-api-strip
      priority: 10

    poktai-web:
      rule: "Host(`pokt.ai`)"
      service: poktai-web
      entryPoints:
        - websecure
      tls: {}
      priority: 1

  middlewares:
    poktai-api-strip:
      stripPrefix:
        prefixes:
          - "/api"

  services:
    poktai-web:
      loadBalancer:
        servers:
          - url: "http://172.20.0.1:4000"

    poktai-api:
      loadBalancer:
        servers:
          - url: "http://api:3001"
